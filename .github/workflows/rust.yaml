# vim: set ft=yaml ts=2 sw=2 et :
---

name: Rust

"on":
  workflow_dispatch: {}
  push: {}

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: git fetch --unshallow

      - uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-cargo
          path: |-
            ~/.cargo
            target
            */target

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: add version to Cargo.toml
        run: |
          mkdir -p cargo.tmp
          cp Cargo.toml cargo.tmp/
          sed -i "s/^version\\s*=\\s*\"0.0.0\"/version = \"$(git describe --tags --always)\"/" cargo.tmp/Cargo.toml
          cargo verify-project --manifest-path cargo.tmp/Cargo.toml && mv cargo.tmp/Cargo.toml . || true

      - run: cargo build --release

      - run: cargo test --no-fail-fast

      - run: cargo fmt --all -- --check

      - run: cargo clippy --all-targets --all-features

      - name: rename targets
        run: |
          mv target/release/bdup target/release/bdup.${{ runner.os }}.${{ runner.arch }}
          mv target/release/bverify target/release/bverify.${{ runner.os }}.${{ runner.arch }}

      - uses: actions/upload-artifact@v3
        with:
          path: |
            target/release/*.${{ runner.os }}.${{ runner.arch }}
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v3
        with:
          path: target/

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          files: |-
            target/**

